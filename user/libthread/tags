!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
EMPTY	_list.h	24;"	d
FOREACH	_list.h	26;"	d
FRONT	_list.h	22;"	d
GET_STACK_CURR_BASE	thr_macros.h	12;"	d
INIT	_list.h	3;"	d
INIT	thr_global_data.h	/^   INIT = 0,$/;"	e	enum:__anon1
INSERT_REAR	_list.h	7;"	d
IS_MULTI_THREADING_ENABLED	thr_macros.h	17;"	d
MULTI_THREADING_DISABLE	thr_macros.h	15;"	d
MULTI_THREADING_ENABLE	thr_macros.h	14;"	d
PAGE_ALIGN	thr_macros.h	3;"	d
REMOVE_FRONT	_list.h	13;"	d
REMOVE_NODE	_list.h	17;"	d
RUNNABLE	thr_global_data.h	/^   RUNNABLE,$/;"	e	enum:__anon1
RUNNING	thr_global_data.h	/^   RUNNING,$/;"	e	enum:__anon1
SET_STACK_CURR_BASE	thr_macros.h	10;"	d
SLEEP	thr_global_data.h	/^   SLEEP,$/;"	e	enum:__anon1
THR_ENOMEM	thr_global_data.h	/^   THR_ENOMEM,$/;"	e	enum:__anon2
THR_ERROR	thr_global_data.h	/^   THR_ERROR = -1,$/;"	e	enum:__anon2
THR_FORK_ERROR	thr_global_data.h	/^   THR_FORK_ERROR$/;"	e	enum:__anon2
THR_INTERNALS_H	thr_internals.h	10;"	d
THR_PTR_ALIGN	thr_macros.h	8;"	d
THR_SIZE_ALIGN	thr_macros.h	5;"	d
THR_SUCCESS	thr_global_data.h	/^   THR_SUCCESS,$/;"	e	enum:__anon2
ZOMBIE	thr_global_data.h	/^   ZOMBIE$/;"	e	enum:__anon1
_list_head	_list.h	/^typedef struct _list_head {$/;"	s
_tcb	thr_global_data.h	/^typedef struct _tcb $/;"	s
calloc	malloc.c	/^void *calloc(size_t __nelt, size_t __eltsize)$/;"	f
child	thread_fork.S	/^child:$/;"	l
construct_tcb	thr_internals.c	/^tcb_t* construct_tcb()$/;"	f
cur_stack_base_addr	thr_global_data.h	/^uintptr_t cur_stack_base_addr;$/;"	v
delete_front	_list.c	/^delete_front(list_head *head)$/;"	f
empty	_list.c	/^empty(list_head *head)$/;"	f
exec_state_t	thr_global_data.h	/^} exec_state_t;$/;"	t	typeref:enum:__anon1
exit_status	thr_global_data.h	/^    void *exit_status;$/;"	m	struct:_tcb
fork_handler	thr_create.c	/^void fork_handler(void *(*func) (void *), void *arg)$/;"	f
free	malloc.c	/^void free(void *__buf)$/;"	f
get_tid	thr_internals.c	/^int get_tid(tcb *thr)$/;"	f
head	thr_global_data.h	/^tcb_t *head;$/;"	v
head_thr_list	thr_global_data.h	/^list_head *head_thr_list;$/;"	v
init	_list.c	/^init(list_head *head)$/;"	f
insert_rear	_list.c	/^insert_rear(list_head *head, list_head *node)$/;"	f
list	thr_global_data.h	/^    list_head *list;$/;"	m	struct:_tcb
list_head	_list.h	/^}list_head;$/;"	t	typeref:struct:_list_head
main_thr_high_addr	thr_global_data.h	/^uintptr_t main_thr_high_addr;$/;"	v
main_thr_low_addr	thr_global_data.h	/^uintptr_t main_thr_low_addr;$/;"	v
main_thread	thr_global_data.h	/^    int main_thread;   $/;"	m	struct:_tcb
main_thread_id	thr_global_data.h	/^int main_thread_id;$/;"	v
malloc	malloc.c	/^void *malloc(size_t __size)$/;"	f
multi_threading	thr_global_data.h	/^int multi_threading;$/;"	v
next	_list.h	/^         struct _list_head *next;$/;"	m	struct:_list_head	typeref:struct:_list_head::_list_head
panic	panic.c	/^void panic(const char *fmt, ...)$/;"	f
parentid	thr_global_data.h	/^    int parentid;$/;"	m	struct:_tcb
prev	_list.h	/^         struct _list_head *prev;$/;"	m	struct:_list_head	typeref:struct:_list_head::_list_head
realloc	malloc.c	/^void *realloc(void *__buf, size_t __new_size)$/;"	f
remove_node	_list.c	/^remove_node(list_head *head, int tid)$/;"	f
search	_list.c	/^search(list_head *head, int tid)$/;"	f
size	_list.c	/^size(list_head *head)$/;"	f
stack_start_addr	thr_global_data.h	/^    uintptr_t stack_start_addr;$/;"	m	struct:_tcb
state	thr_global_data.h	/^    exec_state_t state;$/;"	m	struct:_tcb
tcb_t	thr_global_data.h	/^}tcb_t;$/;"	t	typeref:struct:_tcb
thr_create	thr_create.c	/^int thr_create( void *(*func)(void *), void *args )$/;"	f
thr_err_t	thr_global_data.h	/^} thr_err_t;$/;"	t	typeref:enum:__anon2
thr_init	thr_init.c	/^int thr_init( unsigned int size )$/;"	f
thread_fork	thread_fork.S	/^thread_fork:$/;"	l
thread_stack_size	thr_global_data.h	/^int thread_stack_size;$/;"	v
tid	thr_global_data.h	/^    int tid;$/;"	m	struct:_tcb
